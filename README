# Install go

sudo add-apt-repository ppa:gophers/archive
sudo apt-get update
sudo apt-get install golang-1.10-go

# Define GOPATH

mkdir go/src
GOPATH=$HOME/go
export GOPATH

# Get OpenTracing

mkdir -p $GOPATH/src/github.com/opentracing
cd $GOPATH/src/github.com/opentracing
git clone https://github.com/opentracing/opentracing-go

# Get Jaeger Go Client

mkdir -p $GOPATH/src/github.com/uber
cd $GOPATH/src/github.com/uber
git clone https://github.com/jaegertracing/jaeger-client-go
cd $GOPATH/src/github.com/uber/jaeger-client-go
make install

# if Glide is not installed

curl https://glide.sh/get | sh

# Get Jaeger

https://github.com/jaegertracing/jaeger
make ...

# Get Microservice

mkdir -p $GOPATH/src/github.com/uber/jaeger-client-go/examples
cd $GOPATH/src/github.com/uber/jaeger-client-go/examples
git clone https://github.com/LucasMGutierrez/ms
cd ms

# Run Jaeger from Docker-compose

cd $GOPATH/src/github.com/jaegertracing/jaeger/docker-compose/
mv jaeger-docker-compose.yml docker-compose.yml
docker-compose up

# Run Microservices

sh servers.sh

# Get request

go run client.go

# Kill microservices

sudo lsof -i -P -n | grep LISTEN > arq
python3 killservers.py

# Access Cassandra and Python Driver

docker exec -it dockercompose_cassandra_1 bash
apt update
apt install python-pip
pip install cassandra-driver

# Move Model Generator

cd $GOPATH/src/github.com/uber/jaeger-client-go/examples/ms
docker cp gerador/conn.py dockercompose_cassandra_1:/

# Using Model Generator

docker exec -it dockercompose_cassandra_1 bash
python conn.py [any_service_name] [app_name]

# Delete all Jaeger data from Cassandra 

cd $GOPATH/src/github.com/uber/jaeger-client-go/examples/ms
docker cp gerador/delall.py dockercompose_cassandra_1:/
docker exec -it dockercompose_cassandra_1 bash
python delall.py

# Model

(install PDQ-R)
R -f app_name.R
